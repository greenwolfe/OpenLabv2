{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"border-",
				"border-width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "client/views/openlab/activities_list.html",
			"settings":
			{
				"buffer_size": 3927,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/views/activity/block.html",
			"settings":
			{
				"buffer_size": 7297,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/stylesheets/activity_page.css",
			"settings":
			{
				"buffer_size": 4362,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "  /*************************/\n /*** ACTIVITIES LIST  ****/\n/*************************/\n\n//Template.activitiesList.rendered = function() {\n//  $('#activities').accordion({heightStyle: \"content\"});\n//}\n\nTemplate.activitiesList.helpers({\n  units: function() {\n    var selector = {};\n    if (!editingMainPage())\n      selector.visible = true; //show only visible units\n    return Units.find(selector,{sort: {order: 1}});\n  },\n  sortableOpts: function() {\n    return {\n      draggable:'.unittitle',\n      handle: '.sortUnit',\n      collection: 'Units',\n      selectField: 'app', //selects all units\n      selectValue: 'openlab', //as openlab is only allowed value of app field\n      disabled: !editingMainPage() \n    }\n  }\n});\n\n  /*********************/\n /** UNIT TITLE      **/\n/*********************/\n\nTemplate.unitTitle.helpers({\n  active: function() {\n    var activeUnit = openlabSession.get('activeUnit');\n    if (!activeUnit) {\n      var units = Units.find({visible:true},{sort: {order: 1}}).fetch();\n      var cU = Meteor.user();\n      activeUnit = units[0]._id;\n      if (cU && ('profile' in cU) && ('lastOpened' in cU.profile) && \n        ('studentActivityList' in cU.profile.lastOpened) && \n        Units.findOne(cU.profile.lastOpened.studentActivityList)) \n          activeUnit = cU.profile.lastOpened.studentActivityList;\n      openlabSession.set('activeUnit', activeUnit);\n    }\n    return (this._id == activeUnit) ? 'active' : '';\n  },\n  active2: function() {\n    return (this._id == openlabSession.get('activeUnit2')) ? 'active2':'';\n  },\n  hidden: function() {\n    var activeUnit = openlabSession.get('activeUnit');\n    return (this._id == activeUnit) ? '' : 'hidden';\n  },\n  editable: function() {\n    var activeUnit = Session.get('activeUnit');\n    return (this._id == activeUnit) ? 'true' : '';\n  },\n    \n});\n\nTemplate.unitTitle.events({\n  'click li > a': function(event,tmpl) {\n    event.preventDefault();\n    if (event.ctrlKey) {\n      var activeUnit2 = openlabSession.get('activeUnit2');\n      var activeUnit = openlabSession.get('activeUnit');\n      if (tmpl.data._id == activeUnit2) {\n        openlabSession.set('activeUnit2',null);\n      } else if (tmpl.data._id == activeUnit){\n        return;\n      } else if ((activeUnit2) && (tmpl.data._id == activeUnit)) {\n        openlabSession.set('activeUnit',activeUnit2);\n        openlabSession.set('activeUnit2',null);\n        var cU = Meteor.user();\n        if (cU && ('profile' in cU)) {\n          Meteor.users.update({_id:cU._id}, { $set:{\"profile.lastOpened.studentActivityList\":activeUnit2} });\n        }\n      } else {\n        openlabSession.set('activeUnit2',tmpl.data._id);\n      }\n    } else {\n      openlabSession.set('activeUnit',tmpl.data._id);\n      if (tmpl.data._id == openlabSession.get('activeUnit2'))\n        openlabSession.set('activeUnit2',null);\n      var cU = Meteor.user();\n      if (cU && ('profile' in cU)) {\n        Meteor.users.update({_id:cU._id}, { $set:{\"profile.lastOpened.studentActivityList\":tmpl.data._id} });\n      }\n    }\n  },\n  'dragstart li > a': function(event,tmpl) {\n    //bootstrap navs are draggable by default\n    //disabling this behavior so you have to grab\n    //the draggable handle to sort the units\n    event.preventDefault();\n  }\n})\n\n  /*************************/\n /** ACTIVITY LIST  *******/\n/*************************/\n\nTemplate.activityList.helpers({\n  activities0: function() {\n    var activeUnit2 = openlabSession.get('activeUnit2');\n    var columns = [];\n    var selector = {\n      unitID: this._id,\n      ownerID: {$in: [null,'']} //matches if Activities does not have onwerID field, or if it has the field, but it contains the value null or an empty string\n    };\n    if (!editingMainPage())\n      selector.visible = true; //show only visible activities\n    columns[1] = Activities.find(selector,{sort: {order: 1}}).fetch(); \n    if (activeUnit2)\n      return columns[1];\n    var half = Math.ceil(columns[1].length/2)\n    columns[0] = columns[1].splice(0,half); \n    return columns[0];\n  },\n  activities1: function() {\n    var activeUnit2 = openlabSession.get('activeUnit2');\n    var columns = [];\n    var selector = {\n      unitID: this._id,\n      ownerID: {$in: [null,'']} //matches if Activities does not have onwerID field, or if it has the field, but it contains the value null or an empty string\n    };\n    if (!editingMainPage())\n      selector.visible = true; //show only visible activities\n    columns[1] = Activities.find(selector,{sort: {order: 1}}).fetch(); \n    if (activeUnit2)\n      return null;\n    var half = Math.ceil(columns[1].length/2)\n    columns[0] = columns[1].splice(0,half); \n    return columns[1];\n  },\n  bgsuccess: function() {\n    return openlabSession.get('activeUnit2') ? 'bgsuccess' : '';\n  },\n  bgprimary: function() {\n    return openlabSession.get('activeUnit2') ? 'bgprimary' : '';\n  },\n  activities2: function() {\n    var activeUnit2 = openlabSession.get('activeUnit2');\n    if (!activeUnit2) return null;\n    var selector = {\n      unitID: activeUnit2,\n      ownerID: {$in: [null,'']} //matches if Activities does not have onwerID field, or if it has the field, but it contains the value null or an empty string\n    };\n    if (!editingMainPage())\n      selector.visible = true; //show only visible activities\n    return Activities.find(selector,{sort: {order: 1}})\n  },\n  sortableOpts2: function() {\n    var activeUnit2 = openlabSession.get('activeUnit2');\n    return {\n      draggable:'.aItem',\n      handle: '.sortActivity',\n      group: 'activityColumn',\n      collection: 'Activities',\n      selectField: 'unitID',\n      selectValue: activeUnit2,\n      disabled: !editingMainPage() //currently not working\n      //disabled: (!Session.get('editedWall')), //!= this.wallID to apply to a single wall \n      //onAdd: function(evt) {\n      //  Meteor.call('denormalizeBlock',evt.data._id,alertOnError);\n      //}\n    }    \n  },\n  sortableOpts: function() {\n    return {\n      draggable:'.aItem',\n      handle: '.sortActivity',\n      group: 'activityColumn',\n      collection: 'Activities',\n      selectField: 'unitID',\n      selectValue: this._id,\n      //disabled: !editingMainPage() //currently not working\n      //disabled: (!Session.get('editedWall')), //!= this.wallID to apply to a single wall \n      //onAdd: function(evt) {\n      //  Meteor.call('denormalizeBlock',evt.data._id,alertOnError);\n      //}\n    }\n  },\n  reassessments: function() {\n    var userToShow = Meteor.userId();\n    if (Roles.userIsInRole(userToShow,'teacher')) {\n      userToShow = openlabSession.get('TeacherViewAs');\n    };\n    return Activities.find({unitID: this._id, \n      ownerID: {$in: [userToShow]},\n      type: 'assessment',\n      visible: true},\n      {sort: {rank: 1}});\n  }\n});\n\n  /*************************/\n /** ACTIVITY ITEM  *******/\n/*************************/\n\n/* currentStatus */\nvar currentStatus = function(activityID) {\n  var studentID = Meteor.impersonatedOrUserId();\n  if (!Roles.userIsInRole(studentID,'student'))\n    return undefined;\n  return ActivityStatuses.findOne({studentID:studentID,activityID:activityID});\n}\n\nTemplate.activityItem.helpers({\n  pointsToOrID: function() {\n    return this.pointsTo || this._id;\n  },\n  status: function() {\n    var status = currentStatus(this._id);\n    if (!status)\n      return 'icon-notStarted'\n    return 'icon-' + status.level;\n  },\n  statusTitle: function() {\n    var status = currentStatus(this._id);\n    if (!status)\n      return 'not started';\n    var titleDict = {'notStarted':'not started','oneBar':'barely started','twoBars':'almost half-way done','threeBars':'more than half-way done','fourBars':'80% there','fiveBars':'just about done','submitted':'work submitted','returned':'revisions are needed, see comments by your teacher','donewithcomments':'done, but review comments by your teacher before taking an assessment','done':'done'};\n    return titleDict[status.level];\n  },\n  late: function() {\n    var status = currentStatus(this._id);\n    if (!status)\n      return '';\n    return (status.late) ? 'icon-late' : '';  \n  },\n  expected: function() {\n    return 'expected';\n  },\n  completed: function() {\n    var status = currentStatus(this._id);\n    if (!status)\n      return '';\n    return _.str.include(status.level,'done') ? 'completed' : '';\n  }\n})\n\nTemplate.activityItem.events({\n  'click .activityStatus': function(event,tmpl) {\n    var studentID = Meteor.impersonatedOrUserId();\n    if (!Roles.userIsInRole(studentID,'student'))\n      return; \n    Meteor.call('incrementStatus',studentID,tmpl.data._id,alertOnError);  \n  },\n  'click .activityPunctual': function(event,tmpl) {\n    var studentID = Meteor.impersonatedOrUserId();\n    if (!Roles.userIsInRole(studentID,'student'))\n      return; \n    Meteor.call('markOnTime',studentID,tmpl.data._id,alertOnError);  \n  }\n})\n\n  /*************************/\n /*** NEW ACTIVITY  *******/\n/*************************/\n\nTemplate.newActivity.helpers({\n  fixedFields: function() {\n    return {unitID:this._id}\n  }\n})",
			"file": "client/views/openlab/activities_list.js",
			"file_size": 8973,
			"file_write_time": 130791482898034933,
			"settings":
			{
				"buffer_size": 8977,
				"line_ending": "Unix"
			}
		},
		{
			"file": "collections/activityStatuses.js",
			"settings":
			{
				"buffer_size": 4797,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/stylesheets/activity_statuses.css",
			"settings":
			{
				"buffer_size": 1221,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/publications.js",
			"settings":
			{
				"buffer_size": 1620,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/custom-accounts-ui/viewAs.js",
			"settings":
			{
				"buffer_size": 3033,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/router.js",
			"settings":
			{
				"buffer_size": 4065,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package control: Install Package",
				"Package Control: Install Package"
			]
		],
		"width": 415.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/solargreen/meteor/OpenLabv2",
		"/home/solargreen/meteor/OpenLabv2/client",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/helpers",
		"/home/solargreen/meteor/OpenLabv2/client/views",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab",
		"/home/solargreen/meteor/OpenLabv2/lib",
		"/home/solargreen/meteor/OpenLabv2/server"
	],
	"file_history":
	[
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlab.html",
		"/home/solargreen/meteor/OpenLabv2/collections/memberships.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/activities_list.css",
		"/home/solargreen/meteor/OpenLabv2/lib/router.js",
		"/home/solargreen/meteor/OpenLabv2/server/publications.js",
		"/home/solargreen/meteor/OpenLabv2/methods/MatchHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/collections/activities.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlabHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlabHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlab.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/block.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/block.js",
		"/home/solargreen/meteor/OpenLabv2/server/users.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/progressPlan.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/column.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/column.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/application/layout.html",
		"/home/solargreen/meteor/OpenLabv2/client/main.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/helpers/activityPageSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/helpers/editingMainPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlanHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/wall.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/wallHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/column.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/block.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlan.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/activityPageSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/block.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/activity_page.css",
		"/home/solargreen/meteor/OpenLabv2/OpenLabv2.sublime-project",
		"/home/solargreen/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/solargreen/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/solargreen/meteor/OpenLabv2/methods/sortable1cMethods.js",
		"/home/solargreen/meteor/OpenLabv2/client/sortable1c/sortable1c.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/roleHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityPage.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/wall.html",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/help.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/column.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/help.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/help.js",
		"/home/solargreen/meteor/OpenLabv2/collections/blocks.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/application.css",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/progressPlan.css",
		"/home/solargreen/meteor/OpenLabv2/collections/columns.js",
		"/home/solargreen/meteor/OpenLabv2/collections/walls.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/inEditedWall.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/activityPageHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/inEditedWall.js",
		"/home/solargreen/meteor/OpenLabv2/collections/files.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/showHide.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/alertOnError.js",
		"/home/solargreen/meteor/OpenLabv2/client/summernote/summernote.js",
		"/home/solargreen/meteor/OpenLabv2/client/plaintexteditor/plaintexteditor.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/plaintexteditor.css",
		"/home/solargreen/meteor/OpenLabv2/client/plaintexteditor/plaintexteditor.html",
		"/home/solargreen/meteor/OpenLabv2/client/accountsui/accountsuiConfig.js",
		"/home/solargreen/meteor/uploadsTest/lib/router.js",
		"/home/solargreen/meteor/uploadsTest/collections/activities.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/summernote.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlan.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlanHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/editingMainPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/includes/student_header.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/studentView.html",
		"/home/solargreen/meteor/OpenLabv2/collections/units.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/includes/student_header.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/editingProgressPage.js",
		"/home/solargreen/meteor/OpenLabv2/collections/site.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/showhide.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/application/layout.html",
		"/home/solargreen/meteor/OpenLabv2/client/sortable1c/sortable1c.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/showHide.html",
		"/home/solargreen/meteor/OpenLabv2/methods/showHideMethods.js",
		"/home/solargreen/meteor/OpenLab/server/users.js",
		"/home/solargreen/meteor/OpenLabv2/client/summernote/summernote.html",
		"/home/solargreen/meteor/OpenLabv2/client/summernote/toolbars.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/xedit.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/studentView.js",
		"/home/solargreen/meteor/OpenLabv2/server/fixtures.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/student/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/student/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/student/studentView.html",
		"/home/solargreen/meteor/OpenLabv2/collections/categories.js",
		"/home/solargreen/meteor/OpenLab/collections/site.js",
		"/home/solargreen/meteor/OpenLab/lib/router.js",
		"/home/solargreen/meteor/OpenLab/server/fixtures.js",
		"/home/solargreen/meteor/OpenLab/collections/users.js",
		"/home/solargreen/meteor/OpenLab/client/views/includes/student_header.html",
		"/home/solargreen/meteor/MeteorCheatSheet",
		"/home/solargreen/meteor/uploadsTest/client/helpers/showHide.html",
		"/home/solargreen/meteor/uploadsTest/client/helpers/showHide.js",
		"/home/solargreen/meteor/uploadsTest/client/helpers/inEditedWall.js",
		"/home/solargreen/meteor/uploadsTest/client/summernote/summernote.js",
		"/home/solargreen/meteor/uploadsTest/client/sortable1c/sortable1c.js",
		"/home/solargreen/meteor/uploadsTest/client/pages/headers/activityHeader.html",
		"/home/solargreen/meteor/uploadsTest/client/pages/activity/helpers/inEditedWall.js",
		"/home/solargreen/meteor/uploadsTest/client/pages/activity/helpers/clipboard.js",
		"/home/solargreen/meteor/uploadsTest/client/pages/activity/activityPage.js",
		"/home/solargreen/meteor/uploadsTest/client/pages/activity/wall.js",
		"/home/solargreen/meteor/uploadsTest/client/pages/activity/column.js",
		"/home/solargreen/meteor/uploadsTest/collections/files.js",
		"/home/solargreen/meteor/uploadsTest/client/helpers/alertOnError.js",
		"/home/solargreen/meteor/uploadsTest/collections/blocks.js",
		"/home/solargreen/meteor/uploadsTest/methods/sortable1cMethods.js",
		"/home/solargreen/meteor/uploadsTest/methods/showHideMethods.js",
		"/home/solargreen/meteor/uploadsTest/methods/MatchHelpers.js",
		"/home/solargreen/meteor/uploadsTest/collections/walls.js",
		"/home/solargreen/meteor/uploadsTest/collections/columns.js",
		"/home/solargreen/meteor/uploadsTest/server/fixtures.js",
		"/home/solargreen/meteor/uploadsTest/server/publications.js",
		"/home/solargreen/meteor/uploadsTest/server/init.js",
		"/home/solargreen/meteor/uploadsTest-deployment/mup.json"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"id=\"activities\"",
			"id='activities'",
			"today",
			".unittitle",
			"Session",
			"aitem",
			"newI",
			"activity Item",
			"theActivityID",
			"i.fa",
			"glyph",
			":hover",
			"editing",
			"editingMainPageTF",
			"editingMainPage",
			"cursor:",
			"active",
			"Meteor.call",
			"console.log",
			"Meteor.call",
			"'abc'",
			"Meteor.Collection.ObjectID",
			"inEdited",
			"summernoteOptions",
			"editing",
			"blockTitle",
			"editing",
			"inEditedWall()",
			"editing",
			"inEditedWall",
			"inEditedWall()",
			"fileCount",
			"Session.get('editedWall')",
			"cursor: p",
			".block",
			"block",
			"block-",
			" p ",
			"p ",
			"summernote",
			"bg-",
			"position",
			".inEditedWall",
			"console.log",
			".editTitle",
			"fontsize",
			"this.fontsize",
			"styleWithSpan",
			"');\n",
			"inEditedWall",
			"icon-list",
			"list",
			"button",
			"parentData",
			"btn",
			"columnd",
			"section",
			">\n",
			"inclass",
			"#todos",
			".todos",
			"mostRecentLoMs",
			"mostRecent",
			"#assessmentV",
			".newL",
			"#assessmentVersion",
			"ui-state-highlight",
			"ui-state",
			"creator",
			"tab-",
			"modal",
			".Mo",
			"sortable",
			".sortable",
			" e ",
			"(e)",
			".saveNewAssessment",
			"newAssessment.description =",
			"description",
			"if (newAssessment",
			"type",
			"modal",
			"teacherViewAS",
			"UI.get",
			"UI",
			"modal",
			"newLoM",
			"#addAssessmentDialog",
			"#standards",
			"sortable",
			"sort",
			"max-height",
			"assessmentAct",
			"#activityStan",
			"background",
			"#activityS",
			"removePga",
			"disabled",
			":hover",
			"attendance",
			"TeacherViewAs",
			"TVA",
			"Model",
			"sort",
			"limit",
			"inline-block",
			"standard",
			"sort:",
			"TeacherViewAS",
			"Note",
			"author",
			"student",
			"currentG",
			"userTo",
			"Note",
			".Model",
			"console.log",
			".find",
			"console",
			"#invit",
			"Meteor.call",
			"cursor: d",
			"Meteor.ca",
			".hide",
			"defaultText",
			"editDescription",
			"activity",
			"nA"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Meteor.Collection.ObjectID()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "client/views/openlab/activities_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3927,
						"regions":
						{
						},
						"selection":
						[
							[
								3564,
								3564
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "client/views/activity/block.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7297,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "client/stylesheets/activity_page.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4362,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2703.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "client/views/openlab/activities_list.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8977,
						"regions":
						{
						},
						"selection":
						[
							[
								1816,
								1816
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 425.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "collections/activityStatuses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4797,
						"regions":
						{
						},
						"selection":
						[
							[
								1400,
								1400
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 639.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "client/stylesheets/activity_statuses.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1221,
						"regions":
						{
						},
						"selection":
						[
							[
								1131,
								1131
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "server/publications.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1620,
						"regions":
						{
						},
						"selection":
						[
							[
								1563,
								1563
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "client/custom-accounts-ui/viewAs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3033,
						"regions":
						{
						},
						"selection":
						[
							[
								1676,
								1676
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/router.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4065,
						"regions":
						{
						},
						"selection":
						[
							[
								1279,
								1279
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "OpenLabv2.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/meteor/OpenLab/OpenLab.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
