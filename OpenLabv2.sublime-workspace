{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"getMaxOrder"
			],
			[
				"lastViewed",
				"lastViewedChildOrAdvisee"
			],
			[
				"border-",
				"border-width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "collections/units.js",
			"settings":
			{
				"buffer_size": 3242,
				"line_ending": "Unix"
			}
		},
		{
			"file": "collections/categories.js",
			"settings":
			{
				"buffer_size": 3260,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/publications.js",
			"settings":
			{
				"buffer_size": 5108,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "FlowRouter.subscriptions = function() {\n  this.register('site',Meteor.subscribe('site'));\n  //sections here, too? (or with accounts ui?)\n  //userList here, too?\n};\n//load userList, sections, groups, memberships, childrenOrAdvisees with\n//custom accounts UI on as needed basis, with extra data for teacher loaded in background?\n\nFlowRouter.route('/', {\n  //openlabSession.initializePage()  ... how to do with flow router?  \n  subscriptions: function (params, queryParams) {\n    //decide to load for whole app, this page or specific template\n    //only activities list needs: units, activities ... but then available for rest so long as all needed are loaded in background\n    //memberships only for currently impersonatedOrUser (others loaded in background for teacher?)\n    //same with childrenOrAdvisees and groups \n\n    //units, activities, sections, userList ... are pretty much the same for all users\n    //keep them here, but load hidden stuff in template for teacher\n    //memberships, childrenOrAdvisees, groups ... depend on the user\n    this.register('categories',Meteor.subscribe('categories',false)); \n    this.register('units',Meteor.subscribe('units',false)); \n    this.register('activities',Meteor.subscribe('activities')); \n    this.register('sections',Meteor.subscribe('sections'));\n    this.register('userList',Meteor.subscribe('userList'));\n    this.register('memberships',Meteor.subscribe('memberships'));\n    this.register('childrenOrAdvisees',Meteor.subscribe('childrenOrAdvisees'));\n    this.register('groups',Meteor.subscribe('groups'));\n  },\n  action: function (params, queryParams) {\n    FlowLayout.render('layout', { header: 'openlabHeader', main: 'openlab' });\n  },\n  name: 'openlab'\n});\n\nFlowRouter.route('/activity/:_id', {  \n  //activityPageSession.initializePage() ... how to do with flow router?\n  subscriptions: function (params, queryParams) {\n    //decide to load for whole app, this page or specific template\n    //units needed at all?\n    //only one activity needed\n    //files, walls, columns and blocks only need for the one activity and for the user and his or her current group and section\n    //load above line with activityPage template itself?\n    //groups, memberships and sections only needed for the specific user\n    //teacher may want to load content for other students in the background\n    //load childrenoradvisees for user when parent logs in or is impersonated only?\n    //only leaves loading the activity from here ... hmmm.\n    this.register('categories',Meteor.subscribe('categories',false)); \n    this.register('units',Meteor.subscribe('units',false)); \n    this.register('activities',Meteor.subscribe('activities')); \n    this.register('sections',Meteor.subscribe('sections'));\n    this.register('userList',Meteor.subscribe('userList'));\n    this.register('memberships',Meteor.subscribe('memberships'));\n    this.register('childrenOrAdvisees',Meteor.subscribe('childrenOrAdvisees'));\n    this.register('groups',Meteor.subscribe('groups'));\n  },\n  action: function (params, queryParams) {\n    FlowLayout.render('layout', { header: 'activityHeader', main: 'activityPage' });\n  },\n  name: 'activityPage'\n});\n\nFlowRouter.route('/activity/:_id', {  \n  //activityPageSession.initializePage() ... how to do with flow router?\n  subscriptions: function (params, queryParams) {\n    //decide to load for whole app, this page or specific template\n    //units needed at all?\n    //only one activity needed\n    //files, walls, columns and blocks only need for the one activity and for the user and his or her current group and section\n    //load above line with activityPage template itself?\n    //groups, memberships and sections only needed for the specific user\n    //teacher may want to load content for other students in the background\n    //load childrenoradvisees for user when parent logs in or is impersonated only?\n    //only leaves loading the activity from here ... hmmm.\n    this.register('categories',Meteor.subscribe('categories',false)); \n    this.register('units',Meteor.subscribe('units',false)); \n    this.register('activities',Meteor.subscribe('activities')); \n    this.register('sections',Meteor.subscribe('sections'));\n    this.register('userList',Meteor.subscribe('userList'));\n    this.register('memberships',Meteor.subscribe('memberships'));\n    this.register('childrenOrAdvisees',Meteor.subscribe('childrenOrAdvisees'));\n    this.register('groups',Meteor.subscribe('groups'));\n  },\n  action: function (params, queryParams) {\n    FlowLayout.render('layout', { header: 'activityHeader', main: 'activityPage' });\n  },\n  name: 'activityPage'\n});\n\nFlowRouter.route('/validateAccounts', {  \n  //activityPageSession.initializePage() ... how to do with flow router?\n  subscriptions: function (params, queryParams) {\n    //decide to load for whole app, this page or specific template\n    //all loaded with headers and custom accounts ui above?\n    this.register('sections',Meteor.subscribe('sections'));\n    this.register('userList',Meteor.subscribe('userList'));\n    this.register('memberships',Meteor.subscribe('memberships'));\n    this.register('childrenOrAdvisees',Meteor.subscribe('childrenOrAdvisees'));\n    this.register('emails',Meteor.subscribe('emails'));\n  },\n  triggersEnter: [function(context, redirect) {\n    var user = Meteor.user();\n    if(!Roles.userIsInRole(user, ['teacher']))\n      redirect('/');\n  }],\n  action: function (params, queryParams) {\n    FlowLayout.render('layout', { header: 'activityHeader', main: 'validateAccounts' });\n  },\n  name: 'validateAccounts'\n});\n\nvar parentPath;\nFlowRouter.triggers.exit([function(context,redirect) {\n  parentPath = context.path;\n}])\n\n//pass fileID as a parameter, then look up file\n//object to find path? Might need file ID to\n//do validation and permission checks\nvar uploadRoutes = FlowRouter.group({\n  prefix: '/upload',\n  triggersEnter: [function(context, redirect) {\n    window.open(Meteor.absoluteUrl(context.path),\"\",\"\",true);\n    redirect(parentPath);\n  }]\n});\n\nuploadRoutes.route('/(.*)',{})\n",
			"file": "lib/routes.js",
			"file_size": 4577,
			"file_write_time": 130833987094136440,
			"settings":
			{
				"buffer_size": 6026,
				"line_ending": "Unix"
			}
		},
		{
			"file": "collections/levelsOfMastery.js",
			"settings":
			{
				"buffer_size": 240,
				"line_ending": "Unix"
			}
		},
		{
			"file": "collections/standards.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package control: Install Package",
				"Package Control: Install Package"
			]
		],
		"width": 396.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/solargreen/meteor/OpenLabv2",
		"/home/solargreen/meteor/OpenLabv2/client",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/helpers",
		"/home/solargreen/meteor/OpenLabv2/client/helpers",
		"/home/solargreen/meteor/OpenLabv2/client/views",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/helpers",
		"/home/solargreen/meteor/OpenLabv2/collections",
		"/home/solargreen/meteor/OpenLabv2/lib",
		"/home/solargreen/meteor/OpenLabv2/methods",
		"/home/solargreen/meteor/OpenLabv2/server"
	],
	"file_history":
	[
		"/home/solargreen/meteor/OpenLabv2/server/fixtures.js",
		"/home/solargreen/meteor/OpenLabv2/collections/files.js",
		"/home/solargreen/meteor/OpenLabv2/client/summernote/summernote.js",
		"/home/solargreen/meteor/OpenLabv2/collections/activities.js",
		"/home/solargreen/meteor/OpenLabv2/collections/walls.js",
		"/home/solargreen/meteor/OpenLabv2/collections/blocks.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/block.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/column.js",
		"/home/solargreen/meteor/OpenLabv2/lib/routes.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/activities_list.css",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/methods/groupMethods.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/block.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/column.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/wall.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityPage.html",
		"/home/solargreen/meteor/OpenLabv2/collections/activityStatuses.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/activity_page.css",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityHeader.html",
		"/home/solargreen/meteor/OpenLabv2/methods/showHideMethods.js",
		"/home/solargreen/meteor/OpenLabv2/server/publications.js",
		"/home/solargreen/meteor/OpenLabv2/server/users.js",
		"/home/solargreen/meteor/OpenLabv2/methods/sortable1cMethods.js",
		"/home/solargreen/meteor/OpenLabv2/collections/columns.js",
		"/home/solargreen/meteor/OpenLabv2/methods/blockMethods.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/helpers/wallHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/helpers/activityPageSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/helpers/login_buttons_session.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/helpers/section_helpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/viewAs.html",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/viewAs.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/wall.js",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodPopoverX/workPeriodPopoverX.js",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodGauge/workPeriodGauge.js",
		"/home/solargreen/meteor/OpenLabv2/methods/sectionMethods.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/helpers/group_helpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlabHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/groups.js",
		"/home/solargreen/meteor/OpenLabv2/methods/MatchHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/collections/units.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/activity/activityHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/helpers/statusColors.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/login_buttons.js",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/login_buttons_dialogs.js",
		"/home/solargreen/meteor/OpenLabv2/collections/workPeriods.js",
		"/home/solargreen/meteor/OpenLabv2/methods/dateTimeHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/plaintexteditor/plaintexteditor.js",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodPopoverX/workPeriodPopoverX.html",
		"/home/solargreen/meteor/OpenLabv2/client/custom-accounts-ui/login_buttons.html",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/workPeriod.css",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodPopoverX/workPeriodButton.js",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodPopoverX/workPeriodButton.html",
		"/home/solargreen/meteor/OpenLabv2/client/workPeriod/workPeriodGauge/workPeriodGauge.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/alertOnError.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/parentTemplate.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/dateTimeHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/collections/site.js",
		"/home/solargreen/meteor/OpenLabv2/server/schoolAccountsPublications.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/activity_statuses.css",
		"/home/solargreen/meteor/OpenLabv2/collections/users.js",
		"/home/solargreen/meteor/OpenLabv2/lib/router.js.bak",
		"/home/solargreen/meteor/OpenLabv2/client/layout.html",
		"/home/solargreen/meteor/OpenLabv2/client/main.html",
		"/home/solargreen/meteor/OpenLabv2/lib/router.js",
		"/home/solargreen/meteor/OpenLabv2/client/bootstrap-popover-x/bootstrap-popover-x.min.css",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/workPeriodGauge.css",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/application.css",
		"/home/solargreen/meteor/OpenLabv2/server/init.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/group_modals.css",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlab.html",
		"/home/solargreen/meteor/OpenLabv2/collections/memberships.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlabHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/openlab/openlab.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/progressPlan.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/views/progressandplan/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/views/application/layout.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/helpers/openlabSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/helpers/editingMainPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlanHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/wall.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/wallHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/column.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/block.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityHeader.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlan.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/activityPageSession.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/block.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityHeader.html",
		"/home/solargreen/meteor/OpenLabv2/OpenLabv2.sublime-project",
		"/home/solargreen/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/solargreen/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/solargreen/meteor/OpenLabv2/client/sortable1c/sortable1c.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/roleHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/activityPage.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/wall.html",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/help.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/column.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/help.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/help.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/progressPlan.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/activity/helpers/inEditedWall.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/activityPageHelpers.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/inEditedWall.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/showHide.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/plaintexteditor.css",
		"/home/solargreen/meteor/OpenLabv2/client/plaintexteditor/plaintexteditor.html",
		"/home/solargreen/meteor/OpenLabv2/client/accountsui/accountsuiConfig.js",
		"/home/solargreen/meteor/uploadsTest/lib/router.js",
		"/home/solargreen/meteor/uploadsTest/collections/activities.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/summernote.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlan.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/progressandplan/progressPlanHeader.html",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/editingMainPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/activities_list.js",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/activities_list.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/includes/student_header.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/student/studentView.html",
		"/home/solargreen/meteor/OpenLabv2/client/pages/includes/student_header.js",
		"/home/solargreen/meteor/OpenLabv2/client/helpers/editingProgressPage.js",
		"/home/solargreen/meteor/OpenLabv2/client/stylesheets/showhide.css",
		"/home/solargreen/meteor/OpenLabv2/client/pages/application/layout.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"unittitle.active",
			"cu",
			"glyphicon",
			"check",
			"canEditBlock",
			"Meteor.users",
			"users",
			"Meteor.users",
			"block.type",
			"Units.",
			"lastO",
			"firstUnit",
			"first",
			".modal-backdrop",
			"|| Sections.findOne()",
			"selected",
			"currentStatus",
			"console",
			"Future",
			"Ago",
			"Session.set",
			"Seld",
			"date(",
			"Session.set",
			"denormalize",
			"Format",
			"dateFormat",
			"id=\"activities\"",
			"id='activities'",
			"today",
			".unittitle",
			"Session",
			"aitem",
			"newI",
			"activity Item",
			"theActivityID",
			"i.fa",
			"glyph",
			":hover",
			"editing",
			"editingMainPageTF",
			"editingMainPage",
			"cursor:",
			"active",
			"Meteor.call",
			"console.log",
			"Meteor.call",
			"'abc'",
			"Meteor.Collection.ObjectID",
			"inEdited",
			"summernoteOptions",
			"editing",
			"blockTitle",
			"editing",
			"inEditedWall()",
			"editing",
			"inEditedWall",
			"inEditedWall()",
			"fileCount",
			"Session.get('editedWall')",
			"cursor: p",
			".block",
			"block",
			"block-",
			" p ",
			"p ",
			"summernote",
			"bg-",
			"position",
			".inEditedWall",
			"console.log",
			".editTitle",
			"fontsize",
			"this.fontsize",
			"styleWithSpan",
			"');\n",
			"inEditedWall",
			"icon-list",
			"list",
			"button",
			"parentData",
			"btn",
			"columnd",
			"section",
			">\n",
			"inclass",
			"#todos",
			".todos",
			"mostRecentLoMs",
			"mostRecent",
			"#assessmentV",
			".newL",
			"#assessmentVersion",
			"ui-state-highlight",
			"ui-state",
			"creator",
			"tab-",
			"modal",
			".Mo",
			"sortable",
			".sortable",
			" e ",
			"(e)",
			".saveNewAssessment",
			"newAssessment.description =",
			"description",
			"if (newAssessment",
			"type",
			"modal",
			"teacherViewAS",
			"UI.get",
			"UI",
			"modal",
			"newLoM",
			"#addAssessmentDialog",
			"#standards",
			"sortable",
			"sort",
			"max-height",
			"assessmentAct",
			"#activityStan",
			"background",
			"#activityS",
			"removePga",
			"disabled",
			":hover",
			"attendance",
			"TeacherViewAs"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Meteor.Collection.ObjectID()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "collections/units.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3242,
						"regions":
						{
						},
						"selection":
						[
							[
								2179,
								2179
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 969.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "collections/categories.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3260,
						"regions":
						{
						},
						"selection":
						[
							[
								2894,
								2894
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 884.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "server/publications.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5108,
						"regions":
						{
						},
						"selection":
						[
							[
								854,
								854
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/routes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6026,
						"regions":
						{
						},
						"selection":
						[
							[
								3192,
								3192
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 833.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "collections/levelsOfMastery.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 240,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "collections/standards.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.480132450332,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "OpenLabv2.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/meteor/OpenLab/OpenLab.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
