Meteor.startup(function () {
  //anonymize usernames to provide example
  var studentIndex = 0; 
  var parentIndex = 0;
  var teacherIndex = 0;
  Meteor.users.find().forEach(function(user) {
      if (Roles.userIsInRole(user._id,'student')) {
        studentIndex += 1;
        username = 'student' + studentIndex;
        Meteor.users.update(user._id,{$set: {'username': username }});
        Meteor.users.update(user._id,{$set: {'profile.firstName':'Student' + studentIndex}});
        Meteor.users.update(user._id,{$set: {'profile.lastName': convert(studentIndex)}});
        Meteor.users.update(user._id,{$set: {emails:[]}});
        Accounts.setPassword(user._id,"Pa33word");
      } 
      if (Roles.userIsInRole(user._id,'parent')) {
        parentIndex += 1;
        username = 'parent' + parentIndex;
        Meteor.users.update(user._id,{$set: {'username': username }});
        Meteor.users.update(user._id,{$set: {'profile.firstName':'Parent' + parentIndex}});
        Meteor.users.update(user._id,{$set: {'profile.lastName': convert(parentIndex)}});
        Meteor.users.update(user._id,{$set: {emails:[]}});
        Accounts.setPassword(user._id,"Pa33word");
      }
      if (Roles.userIsInRole(user._id,'teacher')) {
        teacherIndex += 1;
        username = 'teacher' + teacherIndex;
        Meteor.users.update(user._id,{$set: {'username': username }});
        Meteor.users.update(user._id,{$set: {'profile.firstName':'Teacher' + teacherIndex}});
        Meteor.users.update(user._id,{$set: {'profile.lastName': convert(teacherIndex)}});
        Meteor.users.update(user._id,{$set: {emails:[]}});
        Accounts.setPassword(user._id,"Pa33word");
      }
  });

/* //nervous about this because it might create an irrecoverable loss of the files
  //guess its no worse than renaming all the users and not being able to get that back
  Files.find().forEach(function(file) {
    var wall = Walls.findOne(file.wallID);
    if (wall.type != 'teacher')
        UploadServer.delete(file.path);
  });
*/
});

//convert number to words ... used to anonymize names above

var ones=['','one','two','three','four','five','six','seven','eight','nine'];
var tens=['','','twenty','thirty','forty','fifty','sixty','seventy','eighty','ninety'];
var teens=['ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen','seventeen','eighteen','nineteen'];


function convert_millions(num){
    if (num>=1000000){
        return convert_millions(Math.floor(num/1000000))+" million "+convert_thousands(num%1000000);
    }
    else {
        return convert_thousands(num);
    }
}

function convert_thousands(num){
    if (num>=1000){
        return convert_hundreds(Math.floor(num/1000))+" thousand "+convert_hundreds(num%1000);
    }
    else{
        return convert_hundreds(num);
    }
}

function convert_hundreds(num){
    if (num>99){
        return ones[Math.floor(num/100)]+" hundred "+convert_tens(num%100);
    }
    else{
        return convert_tens(num);
    }
}

function convert_tens(num){
    if (num<10) return ones[num];
    else if (num>=10 && num<20) return teens[num-10];
    else{
        return tens[Math.floor(num/10)]+" "+ones[num%10];
    }
}

function convert(num){
    if (num==0) return "zero";
    else return convert_millions(num);
}